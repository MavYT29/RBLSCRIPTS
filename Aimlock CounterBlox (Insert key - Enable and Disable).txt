-- Combined LocalScript

local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local Camera = workspace.CurrentCamera

-- Aimbot state
local AimbotEnabled = false

-- FOV setting (in degrees)
local FOV = 30 -- Adjust this value as needed

-- Create FOV Circle GUI
local function createFOVCircle()
    local screenGui = Instance.new("ScreenGui", game.Players.LocalPlayer:WaitForChild("PlayerGui"))
    local fovCircle = Instance.new("Frame", screenGui)
    fovCircle.Name = "FOVCircle"
    fovCircle.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
    fovCircle.BackgroundTransparency = 0.5
    fovCircle.BorderSizePixel = 0
    fovCircle.Size = UDim2.new(0, FOV * 2, 0, FOV * 2)
    fovCircle.AnchorPoint = Vector2.new(0.5, 0.5)
    fovCircle.Position = UDim2.new(0.5, 0, 0.5, 0) -- Center the circle
    fovCircle.Visible = false

    return fovCircle
end

local fovCircle = createFOVCircle()

-- Function to toggle Aimbot
local function toggleAimbot()
    AimbotEnabled = not AimbotEnabled
    fovCircle.Visible = AimbotEnabled
    print(AimbotEnabled and "Aimbot Enabled" or "Aimbot Disabled")
end

-- Function to check if a position is within the FOV
local function isInFOV(targetPosition)
    local screenPosition, onScreen = Camera:WorldToViewportPoint(targetPosition)
    if onScreen then
        local viewportSize = Camera.ViewportSize
        local center = Vector2.new(viewportSize.X / 2, viewportSize.Y / 2)
        local targetVector = Vector2.new(screenPosition.X, screenPosition.Y)
        local distanceFromCenter = (targetVector - center).Magnitude
        local fovRadius = (viewportSize.X / 2) * math.tan(math.rad(FOV / 2))
        return distanceFromCenter <= fovRadius
    end
    return false
end

-- Function to find the closest player to the cursor
local function getClosestPlayerToCursor()
    local nearestPlayer = nil
    local shortestDistance = math.huge
    local mousePosition = UserInputService:GetMouseLocation()
    
    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= Players.LocalPlayer and player.Character and player.Character:FindFirstChild("Head") then
            local headPosition = Camera:WorldToViewportPoint(player.Character.Head.Position)
            local distance = (Vector2.new(headPosition.X, headPosition.Y) - mousePosition).Magnitude
            
            -- Check if the player is within the viewport and not obstructed
            local ray = Ray.new(Camera.CFrame.Position, (player.Character.Head.Position - Camera.CFrame.Position).unit * 1000)
            local hitPart, hitPosition = workspace:FindPartOnRay(ray, Players.LocalPlayer.Character, false, true)
            
            -- Check if the ray hits the player's head directly and if it's within FOV
            if hitPart and hitPart:IsDescendantOf(player.Character) and isInFOV(player.Character.Head.Position) then
                if distance < shortestDistance then
                    shortestDistance = distance
                    nearestPlayer = player
                end
            end
        end
    end

    return nearestPlayer
end

-- Function to make the camera look at the target
local function aimAt(targetPosition)
    Camera.CFrame = CFrame.new(Camera.CFrame.Position, targetPosition)
end

-- Variable to track mouse button state
local mouseButtonPressed = false

-- RunService loop to continuously check and apply aimbot
RunService.RenderStepped:Connect(function()
    if AimbotEnabled and mouseButtonPressed then
        local closestPlayer = getClosestPlayerToCursor()
        if closestPlayer and closestPlayer.Character and closestPlayer.Character:FindFirstChild("Head") then
            aimAt(closestPlayer.Character.Head.Position)
        end
    end
end)

-- Connect to InputBegan event to toggle aimbot with Insert key
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    if input.KeyCode == Enum.KeyCode.Insert then
        toggleAimbot()
    end
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        mouseButtonPressed = true
    end
end)

-- Connect to InputEnded event to reset mouse button state
UserInputService.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        mouseButtonPressed = false
    end
end)
